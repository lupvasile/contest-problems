#include <iostream>
#include <fstream>
using namespace std;

ifstream f("romb.in");
ofstream g("romb.out");
//#define cout g
struct punct
{
  double x,y;
} p,o;
int t,dx,dy,k;
int solve(double dx,double dy,punct p,int nivel,int start)
{
  punct p_aux;
  int reg;
  if(p.x==0.0)
    {
      if (p.y>0) reg=1;
      else reg=3;
    }
  else if (p.y==0)
    {
      if(p.x>0.0) reg=4;
      else reg=2;
    }
  else if(p.x>0.0 && p.y>0.0)
    {
      p_aux.x=dx/2;
      p_aux.y=dy/2;
      if(p_aux.y*p.x>p_aux.x*p.y) reg=4;
      else reg=1;
    }
  else if (p.x<0.0 && p.y>0.0)
    {
      p_aux.x=-(dx/2);
      p_aux.y=dy/2;
      if(p_aux.y*p.x>p_aux.x*p.y) reg=1;
      else reg=2;
    }
  else if(p.x<0.0 && p.y<0.0)
    {
      p_aux.x=-(dx/2);
      p_aux.y=-(dy/2);
      if(p_aux.y*p.x>p_aux.x*p.y) reg=2;
      else reg=3;
    }
  else if(p.x>0.0 && p.y<0.0)
    {
      p_aux.x=dx/2;
      p_aux.y=-(dy/2);
      if(p_aux.y*p.x>p_aux.x*p.y) reg=3;
      else reg=4;
    }
    if(nivel<k)
    {
    switch (reg)
    {
        case 1: p_aux={0,dy/2};break;
        case 2: p_aux={-(dx/2),0};break;
        case 3: p_aux={0,-(dy/2)};break;
        case 4: p_aux={dx/2,0};break;
    }
    p.x=p.x-p_aux.x;
    p.y=p.y-p_aux.y;
    switch (reg)
    {
        case 1: return solve()
    }
    }
}
int main()
{
  f>>t;
  for(; t; --t)
    {
      f>>dx>>dy>>k>>p.x>>p.y;
      cout<<solve(dx,dy,p,1);
    }
  return 0;
}
